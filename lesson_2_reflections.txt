What happens when you initialize a repository? Why do you need to do it?
	.git folder is greated. It is needed to initialize git resources for 
	tracking future commits to te project.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	Staging area contains only files that are planned to be commited. Working dirrectory on the other side can
	contain files that are untracked by git, or files that are already commited and sare being tracked by git.

How can you use the staging area to make sure you have one commit per logical change?
	By comparing last commit with the content of staging area. If there is changes that constitute logical change
	commit should be performed. Or if there are more then is needet to be commitet, some files can be trown 
	from staging area with git reset --hard (but will also errase changes in working directory)

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	When experimenting with new features that may or may not be later merge with master branch. When some custumization need to be done outside master 
	brunch of development

How do the diagrams help you visualize the branch structure?
	By showing commits that are roots for various branches to be able to see when brunching have happend.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	It is a new commit that have changes merged from two branches. To see common parent and other useful stuf.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	Automatic merge can speed you up only in ituations when there are no conflicts.
	Manual merge gives you ability to decide what new version should look like.